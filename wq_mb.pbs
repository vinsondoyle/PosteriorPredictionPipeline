#PBS -A hpc_phyleaux03
#PBS -l nodes=16:ppn=16
#PBS -l walltime=12:00:00
#PBS -q workq
#PBS -N wq_mb

# Things that should be customized, carefully of course. The
# script is going to run MrBayes via MPI with 2 processes, so
# we'll divide PPN by 2 for the following.

# Set number of workers per node:

WPN=1

# Set the working directory:

WORKDIR=/work/sonofvin

# Name of the file containing the list of input files:

FILES=${WORKDIR}/PPDataList

# Name of the PBS script file:

JOBFILE=${WORKDIR}/wq_mb.pbs

# Name of the task script each worker is expected to run to process
# the files sent to it as the only command line argument.

TASK=${WORKDIR}/wq_mb.sh

###################################################################
# What follows should be considered powerful magic and dabbled with
# at your own peril.
###################################################################

# Drop into the working directory.

cd ${WORKDIR}

# Only the mother superior has PBS_JOBID defined, so we will be
# passing it to the other nodes as $2. Use this fact to decide if
# we are running on the mother superior or a worker:

if [ "${2}x" = "x" ] ; then

   # Must be the mother superior. Remember our host name.

   MS=`uname -n`

   # Use a bit of magic to strip off the trailing host name and
   # leave only the job number from PBS_JOBID:

   JOBNUM=${PBS_JOBID%.*}
   HOSTLIST=${WORKDIR}/hostlist.${JOBNUM}

   # We want the mother superior host name first. So, take the host
   # list provided, sort it into a unique list of names, with MS first.
   # This assures it's node ID, or position in the hostlist, is 1.

   echo ${MS} > ${HOSTLIST}
   grep -v ${MS} ${PBS_NODEFILE} | uniq | sort >> ${HOSTLIST}

   # The PBS script needs to be executable since we actually run it on
   # the worker nodes.

   chmod a+x ${JOBFILE}

   # Ready to start the script on all worker nodes. We'll pass
   # PBS_WALLTIME as an argument to the workers.

   for H in `cat ${HOSTLIST}` ; do
      if [ ${H} != ${MS} ] ; then
         ssh -n ${H} ${JOBFILE} ${PBS_WALLTIME} ${JOBNUM} &
      fi
   done

   # Start our own set of workers.

   python ${WORKDIR}/wq.py -w ${WPN} ${MS} ${PBS_WALLTIME} &

   # Give workers a chance to spin up.

   sleep 1

   # Start up the dispatcher and result manager.

   python ${WORKDIR}/wq.py -d ${TASK} ${FILES}

else

   # Otherwise, we are a worker, so act accordingly.  The job number
   # was passed by the mother superior (see above).

   HOSTLIST=${WORKDIR}/hostlist.$2

   # Now, we have to get the name of mother superior from the host
   # list. Thats so we know where the dispatcher is running. Just grab
   # the first entry from the host list and press on.

   MS=`head -1 ${HOSTLIST}`

   # Ready to go. Spin up the workers. The mother superior passes
   # the job ID as argument 1 when the script is called.

   python ${WORKDIR}/wq.py -w ${WPN} ${MS} $1

fi

# Give a bit of time to make sure everything has shut down.

sleep 5
